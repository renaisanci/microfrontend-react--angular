{
  "name": "cosmos-frontend",
  "version": "0.0.1",
  "description": "navify Cosmos Frontend",
  "repository": {
    "type": "git",
    "url": "https://code.roche.com/lni/modules/core-apps/cosmos/cosmos-frontend"
  },
  "private": true,
  "author": "F.Hoffmann-La Roche Ltd",
  "license": "See license in root LICENSE.txt",
  "main": "index.html",
  "scripts": {
    "prepare": "husky install",
    "install:mock-server": "cd mock-server && npm install && cd ..",
    "install:mock-na-console": "cd mock-na-console && npm install && cd ..",
    "postinstall": "is-ci || (npm run install:mock-server && npm run install:mock-na-console)",
    "typecheck": "concurrently --names app,cypress --kill-others-on-fail \"tsc --pretty --noEmit\" \"tsc --pretty --noEmit --project cypress\"",
    "typecheck:watch": "concurrently --names app,cypress --kill-others-on-fail \"tsc --pretty --watch --noEmit\" \"tsc --pretty --noEmit --watch --project cypress\"",
    "typecheck:all": "concurrently --names app,cypress,mock-server,mock-na-console --kill-others-on-fail \"tsc --pretty --noEmit\" \"tsc --pretty --noEmit --project cypress\" \"tsc --pretty --noEmit --project mock-server\" \"tsc --pretty --noEmit --project mock-na-console\"",
    "lint": "eslint --ext .js,.ts,.tsx --max-warnings 0 --cache --cache-location .cache/.eslintcache .",
    "lint:summary": "npm run lint -- --format summary",
    "lint:fix": "npm run lint -- --fix",
    "run:dev-server": "webpack serve --open --config ./config/webpack/webpack.dev.js",
    "run:dev-server:watch": "nodemon --config nodemon.json --exec \"npm run run:dev-server\"",
    "run:mock-server:watch": "npm run start:watch --prefix mock-server",
    "run:mock-na-console": "npm run start --prefix mock-na-console",
    "start": "npm run start:dev:all",
    "start:dev": "concurrently --names typecheck,mock-server,dev-server, npm:typecheck:watch npm:run:mock-server:watch npm:run:dev-server:watch",
    "start:dev:all": "concurrently --names typecheck,mock-server,dev-server,mock-na-console npm:typecheck:watch npm:run:mock-server:watch npm:run:dev-server:watch npm:run:mock-na-console",
    "build": "npm run build:prod",
    "build:dev": "rimraf build/dev && webpack --config ./config/webpack/webpack.dev.js",
    "build:dev:report": "rimraf reports/build/dev && npm run build:dev -- --env report",
    "build:prod": "rimraf build/prod && webpack --config ./config/webpack/webpack.prod.js",
    "build:prod:report": "rimraf reports/build/prod && npm run build:prod -- --env report",
    "test:unit": "rimraf reports/test-unit && jest --clear-cache && jest --config ./config/jest/jest.config.unit.js --verbose --coverage --detectOpenHandles",
    "test:unit:show-reports": "open-cli ./reports/test-unit/details/jest-html.html && open-cli ./reports/test-unit/coverage/index.html && npx allure-commandline serve ./reports/test-unit/allure",
    "test:contract": "rimraf reports/test-contract && cross-env PACT_DO_NOT_TRACK=true jest --config ./config/jest/jest.config.contract.js --runInBand --passWithNoTests --coverage",
    "test:contract:show-reports": "open-cli ./reports/test-contract/details/jest-html.html && open-cli ./reports/test-contract/coverage/index.html && npx allure-commandline serve ./reports/test-contract/allure",
    "test:component": "rimraf reports/test-component && cross-env BABEL_ENV=test cypress run --component --browser chrome --env allure=true",
    "test:component:open": "cross-env BABEL_ENV=test cypress open --component --browser chrome --env coverage=false",
    "test:component:show-reports": "open-cli ./reports/test-component/coverage/index.html && npx allure-commandline serve ./reports/test-component/allure",
    "test:integration": "rimraf reports/test-integration && cypress run --e2e --browser chrome --env allure=true",
    "test:integration:open": "cypress open --e2e --browser chrome",
    "test:integration:local-dev": "concurrently --names dev-server,int-tests --kill-others --success command-TestE2E  \"npm run run:dev-server -- --no-open --port 8094\" \"npx wait-on http://localhost:8094 && cross-env CYPRESS_BASE_URL=http://localhost:8094 npm run test:integration\"",
    "test:integration:local-prod": "concurrently --names preview-server,int-tests --kill-others \"npx serve ./build/prod -p 8095 --single --no-clipboard --debug\" \"npx wait-on http://localhost:8095 && cross-env CYPRESS_BASE_URL=http://localhost:8095 npm run test:integration\"",
    "check:circulardeps": "dpdm src/app.entrypoint.tsx --tree false --warning false",
    "sonarqube": "sonar-scanner -Dproject.settings=./sonar-project.properties -Dsonar.projectKey=$SONAR_KEY -Dsonar.projectName=$SONAR_KEY -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=$SONAR_URL -Dsonar.gitlab.pullRequest=$CI_MR_IID"
  },
  "engines": {
    "node": ">=20.3.1"
  },
  "dependencies": {
    "@emotion/react": "^11.11.1",
    "@lemoncode/fonk": "^1.5.4",
    "@lemoncode/fonk-range-date-validator": "^1.0.0",
    "@lemoncode/fonk-range-number-validator": "^1.1.0",
    "@one/design-tokens": "^6.3.0",
    "@one/icons": "^7.7.0",
    "@one/react": "^6.6.0",
    "@one/web-components": "^6.6.0",
    "@tanstack/react-query": "^5.14.1",
    "@tanstack/react-query-devtools": "^5.14.1",
    "@tanstack/react-table": "^8.11.0",
    "@tanstack/react-virtual": "^3.0.1",
    "axios": "^1.6.2",
    "aws-amplify": "^6.0.26",
    "i18next": "^22.4.9",
    "i18next-browser-languagedetector": "^7.0.1",
    "i18next-http-backend": "^2.1.1",
    "intl-dateformat": "^0.1.4",
    "jotai": "^2.5.1",
    "jotai-tanstack-query": "^0.8.0",
    "lodash.throttle": "^4.1.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-i18next": "^12.1.4",
    "react-router-dom": "^6.18.0",
    "regenerator-runtime": "^0.13.11",
    "@babel/runtime":"7.24.4"
  },
  "devDependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "@babel/cli": "^7.8.3",
    "@babel/core": "^7.8.3",
    "@babel/preset-env": "^7.8.3",
    "@babel/preset-react": "^7.8.3",
    "@babel/plugin-transform-runtime": "7.24.3",
    "@babel/preset-typescript": "^7.8.3",
    "@cypress/code-coverage": "^3.12.19",
    "@emotion/babel-plugin": "^11.10.5",
    "@emotion/eslint-plugin": "^11.10.0",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@mmisty/cypress-allure-adapter": "^0.16.2",
    "@pact-foundation/pact": "^12.1.2",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.10",
    "@svgr/webpack": "^6.5.1",
    "@testing-library/cypress": "^10.0.1",
    "@testing-library/jest-dom": "^6.1.4",
    "@testing-library/react": "^14.0.0",
    "@testing-library/user-event": "^14.4.3",
    "@types/dotenv-defaults": "^2.0.1",
    "@types/jest": "^29.2.5",
    "@types/lodash.throttle": "^4.1.8",
    "@types/node": "^16.11.10",
    "@types/react": "^18.2.33",
    "@types/react-dom": "^18.2.14",
    "@types/react-router-dom": "^5.1.3",
    "@typescript-eslint/eslint-plugin": "^6.8.0",
    "@typescript-eslint/parser": "^6.8.0",
    "babel-jest": "^29.3.1",
    "babel-loader": "^8.0.6",
    "babel-plugin-istanbul": "^6.1.1",
    "compression-webpack-plugin": "^10.0.0",
    "concurrently": "^7.6.0",
    "construct-style-sheets-polyfill": "^3.1.0",
    "copy-webpack-plugin": "^11.0.0",
    "cross-env": "^7.0.3",
    "css-loader": "^6.5.1",
    "cypress": "13.6.3",
    "cypress-multi-reporters": "^1.6.4",
    "cypress-sonarqube-reporter": "^1.13.0",
    "dotenv-defaults": "^5.0.2",
    "dotenv-webpack": "^8.0.1",
    "dpdm": "^3.14.0",
    "eslint": "^8.3.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-formatter-summary": "^1.0.2",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-react": "^7.19.0",
    "history": "^5.3.0",
    "html-webpack-plugin": "^5.5.0",
    "husky": "^8.0.3",
    "identity-obj-proxy": "^3.0.0",
    "is-ci": "^3.0.1",
    "jest": "^29.7.0",
    "jest-allure2-adapter": "^0.3.11",
    "jest-environment-jsdom": "^29.7.0",
    "jest-html-reporters": "^3.0.11",
    "jest-jasmine2": "^29.7.0",
    "jest-sonar": "^0.2.15",
    "jotai-devtools": "^0.7.0",
    "lint-staged": "^13.1.0",
    "mini-css-extract-plugin": "^2.6.0",
    "nodemon": "^3.0.3",
    "nyc": "^15.1.0",
    "open-cli": "^7.2.0",
    "prettier": "^2.5.0",
    "react-refresh": "^0.14.0",
    "resize-observer-polyfill": "^1.5.1",
    "rimraf": "^3.0.2",
    "sonarqube-scanner": "^2.8.0",
    "style-loader": "^3.3.1",
    "ts-jest": "^29.1.0",
    "typescript": "^5.2.2",
    "webpack": "^5.64.4",
    "webpack-bundle-analyzer": "^4.5.0",
    "webpack-cli": "^4.9.1",
    "webpack-dev-server": "^4.6.0",
    "webpack-merge": "^5.8.0"
  }
}
